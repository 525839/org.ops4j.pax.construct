<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
  <parent>
    <groupId>org.ops4j.pax</groupId>
    <artifactId>construct</artifactId>
    <version>0.6.2-SNAPSHOT</version>
  </parent>

  <modelVersion>4.0.0</modelVersion>
  <groupId>org.ops4j.pax.construct</groupId>
  <artifactId>scripts</artifactId>

  <name>OPS4J - Generate Pax Scripts</name>

  <packaging>pom</packaging>

  <build>
    <outputDirectory>target/bin</outputDirectory>
    <resources>
      <resource>
        <directory>src/bin</directory>
        <filtering>true</filtering>
      </resource>
    </resources>
    <plugins>
      <plugin>
        <groupId>org.codehaus.mojo.groovy</groupId>
        <artifactId>groovy-maven-plugin</artifactId>
        <executions>
          <execution>
            <id>generate-scripts</id>
            <phase>generate-resources</phase>
            <goals>
              <goal>execute</goal>
            </goals>
            <configuration>
              <source>
                println 'Generate scripts'
                println '================'
                new File( pom.build.directory, "bin" ).mkdirs()

                engine = new groovy.text.SimpleTemplateEngine()
                new File( pom.basedir, "src/commands" ).eachFileMatch( ~/[^.]+/ )
                {
                  print "${it.name}\t"
                  options = new ConfigSlurper().parse( it.toURL() )
                  options.order.each
                  {
                    print ' '
                    if( options[it].optional ) print '['
                    print "-${it} ${options[it].name}"
                    if( options[it].optional ) print ']'
                  }
                  println ''

                  properties = [:]
                  properties.version = "${version}"
                  properties.options = options
                  properties.mojo = "${it.name}"

                  if( options.recursive )
                    properties.non_recursive = ""
                  else
                    properties.non_recursive = "-N"

                  nix = new File( pom.basedir, "src/groovy/pax-command" )
                  template = engine.createTemplate( nix ).make( properties )
                  new File( pom.build.directory, "bin/pax-${it.name}" ).write( template.toString() )

                  bat = new File( pom.basedir, "src/groovy/pax-command.bat" )
                  template = engine.createTemplate( bat ).make( properties )
                  new File( pom.build.directory, "bin/pax-${it.name}.bat" ).write( template.toString() )
                }
              </source>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <artifactId>maven-resources-plugin</artifactId>
        <executions>
          <execution>
            <id>filter-scripts</id>
            <phase>process-resources</phase>
            <goals>
              <goal>resources</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <artifactId>maven-assembly-plugin</artifactId>
        <executions>
          <execution>
            <id>make-assembly</id>
            <phase>package</phase>
            <goals>
              <goal>attached</goal>
            </goals>
            <configuration>
              <finalName>pax-construct-${version}</finalName>
              <appendAssemblyId>false</appendAssemblyId>
              <descriptors>
                <descriptor>src/assembly/zip.xml</descriptor>
              </descriptors>
            </configuration>
          </execution>
          <execution>
            <id>release-scripts</id>
            <phase>package</phase>
            <goals>
              <goal>attached</goal>
            </goals>
            <configuration>
              <finalName>release</finalName>
              <appendAssemblyId>false</appendAssemblyId>
              <descriptors>
                <descriptor>src/assembly/dir.xml</descriptor>
              </descriptors>
            </configuration>
          </execution>
        </executions>
      </plugin>
    </plugins>
  </build>

</project>
