 ------
 pax-wrap-jar
 ------
 Stuart McCulloch
 ------
 12 October 2007
 ------

~~ Copyright 2007 Stuart McCulloch
~~
~~ Licensed under the Apache License, Version 2.0 (the "License");
~~ you may not use this file except in compliance with the License.
~~ You may obtain a copy of the License at
~~
~~      http://www.apache.org/licenses/LICENSE-2.0
~~
~~ Unless required by applicable law or agreed to in writing, software
~~ distributed under the License is distributed on an "AS IS" BASIS,
~~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
~~ See the License for the specific language governing permissions and
~~ limitations under the License.

~~ NOTE: For help with the syntax of this file, see:
~~ http://maven.apache.org/guides/mini/guide-apt-format.html

<<<pax-wrap-jar [-g groupId] -a artifactId [-v version] [-o] [-- mvnOpts ...]>>>

 Creates a Maven POM to wrap a third-party jar as an OSGi bundle, use -o to overwrite an existing wrapper.
 When this script is used outside of a Pax-Construct project, it creates a standalone POM.

 * if no groupId is given, it is assumed to be the same as the artifactId.

 * if no version is given, the latest version in the repository is selected.

* Additional Maven options

*---------------------------------------------------*---------------------------------------------------+
| <<<-DaddVersion>>>                                | add the library version to the wrapper directory  |
*---------------------------------------------------*---------------------------------------------------+
| <<<-DwrapTransitive>>>                            | create wrappers for transitive dependencies       |
*---------------------------------------------------*---------------------------------------------------+
| <<<-DwrapOptional>>>                              | also create wrappers for optional dependencies    |
*---------------------------------------------------*---------------------------------------------------+
| <<<-Dexclusions=>>><groupId:artifactId,...>       | exclude these artifacts from being wrapped        |
*---------------------------------------------------*---------------------------------------------------+
| <<<-DembedTransitive>>>                           | embed transitive dependencies inside the wrapper  |
*---------------------------------------------------*---------------------------------------------------+
| <<<-DincludeResource=>>><directive>               | Include-Resource BND directive                    |
*---------------------------------------------------*---------------------------------------------------+
| <<<-DimportPackage=>>><directive>                 | Import-Package BND directive                      |
*---------------------------------------------------*---------------------------------------------------+
| <<<-DexportContents=>>><directive>                | -exportcontents BND directive                     |
*---------------------------------------------------*---------------------------------------------------+
| <<<-DrequireBundle=>>><directive>                 | Require-Bundle BND directive                      |
*---------------------------------------------------*---------------------------------------------------+
| <<<-DdynamicImportPackage=>>><directive>          | DynamicImport-Package BND directive               |
*---------------------------------------------------*---------------------------------------------------+
| <<<-DtestMetadata=false>>>                        | disable exhaustive OSGi bundle detection          |
*---------------------------------------------------*---------------------------------------------------+
| <<<-DparentId=>>><groupId:artifactId>             | look for a different parent POM                   |
*---------------------------------------------------*---------------------------------------------------+
| <<<-DtargetDirectory=>>><path>                    | alternative location of the wrapper               |
*---------------------------------------------------*---------------------------------------------------+
| <<<-Dcontents=>>><groupId:artifactId:version,...> | include content from selected archetypes          |
*---------------------------------------------------*---------------------------------------------------+
| <<<-DarchetypeVersion=>>><version>                | use a different release of the Pax archetype      |
*---------------------------------------------------*---------------------------------------------------+
| <<<-DremoteArchetypeRepositories=>>><url list>    | where to download the wrapper archetype(s)        |
*---------------------------------------------------*---------------------------------------------------+
| <<<-DattachPom=false>>>                           | don't add this wrapper as a module                |
*---------------------------------------------------*---------------------------------------------------+
| <<<-DcompactIds=false>>>                          | don't try to combine name segments                |
*---------------------------------------------------*---------------------------------------------------+

 <<<-DparentId>>> is useful when you want to link the new wrapper into an existing non Pax-Construct project.

* Examples

+---+
pax-wrap-jar -a backport-util-concurrent -v 3.0 -- -DaddVersion "-DimportPackage=sun.misc;resolution:=optional,*"

pax-wrap-jar -a commons-logging -v 1.1 -- -DwrapTransitive "-DimportPackage=javax.*|com.sun.jdmk.comm;resolution:=optional,*"
+---+

